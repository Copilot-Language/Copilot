TODOs

* Modify atom so that it refuses names that produce invalid C code. See
   checkname in Language.Atom.Elaboration.hs (still probably bugged) Also see
   normalizeVar in Language.Copilot.Core.hs.

 * Add arrays to the language(?)

 * Do MC/DC coverage testing(?)
   * Use the open-source Certification thing?

 * AIG-based equivalence checking.

 * Add math.h functions to Language.hs.

 * Move all the error-checking to one file, instead of "error ..." spread all
   over.

 * Better error handling/error message for bad options/parameters for interface
   functions.  Perhaps use hsTidy?  <http://hackage.haskell.org/package/hstidy>

 * Use para <http://hackage.haskell.org/package/para> for pretty-formatting
   error msgs from Analyzer.hs as well as Help.hs.
 
 * Go through using hlint suggestions.

 * Add to Help.hs documentation on using the setClock function to use the HW
   clock.

 * Fix splint warnings on generated C code 

 * Libs/Indexes return a parameterized type rather than Int16

 * Display external vars when interpreting

 * send lets you send stream values on ports at some phase.  Make sure that the
   stream semantics are preserved by ensuring you don't send at in appropriate
   times.

 * Allow for sampling functions; i.e., you get the return value of the
   function.  So you don't have to set up extra C vars to get the function
   values.

 * Make triggers part of the language?
 
 * We might want to put triggers at phase 1 and draw on the output vars so as to
   avoid computing so many next-states.
